(()=>{"use strict";async function e(){try{const e=await fetch(chrome.runtime.getURL("easylist-rules-optimized.json")),o=await e.json();chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:o.map((e=>e.id)),addRules:o}),console.log(`EasyList applied with ${o.length} rules.`)}catch(e){console.error("Failed to load EasyList rules:",e)}}chrome.runtime.onInstalled.addListener((()=>{console.log("Extension installed"),e(),chrome.storage.sync.get("source",(e=>{e.source||chrome.storage.sync.set({source:"bible"},(()=>{console.log("Default source set to 'bible'.")}))}))})),chrome.runtime.onStartup.addListener(e),setInterval(e,864e5),chrome.runtime.onMessage.addListener(((e,o,s)=>{if(console.log("Message received in background:",e),"getSource"===e.type)return chrome.storage.sync.get("source",(e=>{console.log("Source retrieved from storage:",e.source),s({source:e.source||"bible"})})),!0}))})();